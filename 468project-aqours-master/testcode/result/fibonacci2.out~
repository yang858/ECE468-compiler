;IR code
;LABEL main
;LINK
;STRING input "Please input an integer number: "
;STRING space " "
;STRING eol "\n"
;EOGD
;LABEL F
;LINK
;STOREI 2 $T0
;LE $1 $T0 label1
;STOREI 1 $T1
;SUBI $1 $T1 $T2
;PUSH
;PUSH $T2
;JSR F
;POP
;POP r3
;STOREI r3 $-1
;STOREI 2 $T4
;SUBI $1 $T4 $T5
;PUSH
;PUSH $T5
;JSR F
;POP
;POP r6
;STOREI r6 $-2
;ADDI $-1 $-2 $T7
;STOREI $T7 $R
;RET
;JUMP label2
;LABEL label1
;STOREI 0 $T8
;NE $1 $T8 label3
;STOREI 0 $T9
;STOREI $T9 $R
;RET
;JUMP label4
;LABEL label3
;STOREI 1 $T10
;NE $1 $T10 label5
;STOREI 1 $T11
;STOREI $T11 $R
;RET
;JUMP label6
;LABEL label5
;STOREI 1 $T12
;STOREI $T12 $R
;RET
;JUMP label6
;LABEL label6
;LABEL label6
;JUMP label4
;LABEL label4
;LABEL label4
;JUMP label2
;LABEL label2
;LABEL label2
;RET
;NEWLINE
;LABEL main
;LINK
;WRITES input
;READI $-2
;STOREI 0 $T1
;STOREI $T1 $-1
;LABEL label7
;EQ $-1 $-2 label8
;PUSH
;PUSH $-1
;JSR F
;POP
;POP r4
;STOREI r4 $-3
;WRITEI $-1
;WRITES space
;WRITEI $-3
;WRITES eol
;LABEL label9
;STOREI 1 $T2
;ADDI $-1 $T2 $T3
;STOREI $T3 $-1
;JUMP label7
;LABEL label8
;STOREI 0 $T5
;STOREI $T5 $R
;RET
;NEWLINE
;RET
;tiny code
str input "Please input an integer number: "
str space " "
str eol "\n"
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label F
link 1
move 2 r0
cmpi $1 r0
jle label1
move 1 r1
move $1 r2
subi r1 r2
push
push r2
push r0
push r1
push r2
push r3
jsr F
pop r3
pop r2
pop r1
pop r0
pop
pop r3
move r3 $-1
move 2 r4
move $1 r5
subi r4 r5
push
push r5
push r0
push r1
push r2
push r3
jsr F
pop r3
pop r2
pop r1
pop r0
pop
pop r6
move r6 $-2
move $-1 r7
addi $-2 r7
move r7 $1
unlnk
ret
jmp label2
label label1
move 0 r8
cmpi $1 r8
jne label3
move 0 r9
move r9 $2
unlnk
ret
jmp label4
label label3
move 1 r10
cmpi $1 r10
jne label5
move 1 r11
move r11 $3
unlnk
ret
jmp label6
label label5
move 1 r12
move r12 $4
unlnk
ret
jmp label6
label label6
label label6
jmp label4
label label4
label label4
jmp label2
label label2
label label2
unlnk
ret
label main
link 0
sys writes input
sys readi $-2
move 0 r1
move r1 $-1
label label7
move $-2 r1
cmpi $-1 r1
jeq label8
push
push $-1
push r0
push r1
push r2
push r3
jsr F
pop r3
pop r2
pop r1
pop r0
pop
pop r4
move r4 $-3
sys writei $-1
sys writes space
sys writei $-3
sys writes eol
label label9
move 1 r2
move $-1 r3
addi r2 r3
move r3 $-1
jmp label7
label label8
move 0 r5
move r5 $0
unlnk
ret
sys halt
